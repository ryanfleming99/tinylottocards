"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["src_components_Moonpay_js"],{

/***/ "./src/components/Moonpay.js":
/*!***********************************!*\
  !*** ./src/components/Moonpay.js ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MoonPay)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _moonpay_moonpay_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @moonpay/moonpay-react */ \"./node_modules/@moonpay/moonpay-react/dist/index.js\");\n\n\nfunction MoonPay(props) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_moonpay_moonpay_react__WEBPACK_IMPORTED_MODULE_1__.MoonPayBuyWidget, {\n        className: props.className,\n        variant: props.variant,\n        baseCurrencyCode: props.baseCurrencyCode,\n        baseCurrencyAmount: props.baseCurrencyAmount,\n        defaultCurrencyCode: props.defaultCurrencyCode,\n        visible: props.visible\n    }, void 0, false, {\n        fileName: \"/Users/user1/Desktop/portfolio/tiny-lotto-react/src/components/Moonpay.js\",\n        lineNumber: 5,\n        columnNumber: 5\n    }, this);\n}\n_c = MoonPay;\nvar _c;\n$RefreshReg$(_c, \"MoonPay\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9Nb29ucGF5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTBEO0FBRTNDLFNBQVNDLFFBQVFDLEtBQUs7SUFDbkMscUJBQ0UsOERBQUNGLG9FQUFnQkE7UUFDZkcsV0FBV0QsTUFBTUMsU0FBUztRQUMxQkMsU0FBU0YsTUFBTUUsT0FBTztRQUN0QkMsa0JBQWtCSCxNQUFNRyxnQkFBZ0I7UUFDeENDLG9CQUFvQkosTUFBTUksa0JBQWtCO1FBQzVDQyxxQkFBcUJMLE1BQU1LLG1CQUFtQjtRQUM5Q0MsU0FBU04sTUFBTU0sT0FBTzs7Ozs7O0FBRzVCO0tBWHdCUCIsInNvdXJjZXMiOlsiL1VzZXJzL3VzZXIxL0Rlc2t0b3AvcG9ydGZvbGlvL3RpbnktbG90dG8tcmVhY3Qvc3JjL2NvbXBvbmVudHMvTW9vbnBheS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb29uUGF5QnV5V2lkZ2V0IH0gZnJvbSBcIkBtb29ucGF5L21vb25wYXktcmVhY3RcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTW9vblBheShwcm9wcykge1xuICByZXR1cm4gKFxuICAgIDxNb29uUGF5QnV5V2lkZ2V0XG4gICAgICBjbGFzc05hbWU9e3Byb3BzLmNsYXNzTmFtZX1cbiAgICAgIHZhcmlhbnQ9e3Byb3BzLnZhcmlhbnR9XG4gICAgICBiYXNlQ3VycmVuY3lDb2RlPXtwcm9wcy5iYXNlQ3VycmVuY3lDb2RlfVxuICAgICAgYmFzZUN1cnJlbmN5QW1vdW50PXtwcm9wcy5iYXNlQ3VycmVuY3lBbW91bnR9XG4gICAgICBkZWZhdWx0Q3VycmVuY3lDb2RlPXtwcm9wcy5kZWZhdWx0Q3VycmVuY3lDb2RlfVxuICAgICAgdmlzaWJsZT17cHJvcHMudmlzaWJsZX1cbiAgICAvPlxuICApO1xufVxuIl0sIm5hbWVzIjpbIk1vb25QYXlCdXlXaWRnZXQiLCJNb29uUGF5IiwicHJvcHMiLCJjbGFzc05hbWUiLCJ2YXJpYW50IiwiYmFzZUN1cnJlbmN5Q29kZSIsImJhc2VDdXJyZW5jeUFtb3VudCIsImRlZmF1bHRDdXJyZW5jeUNvZGUiLCJ2aXNpYmxlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/Moonpay.js\n"));

/***/ }),

/***/ "./node_modules/@moonpay/moonpay-react/dist/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@moonpay/moonpay-react/dist/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MoonPayBalanceDepositWidget: () => (/* binding */ MoonPayBalanceDepositWidget),\n/* harmony export */   MoonPayBalanceWithdrawWidget: () => (/* binding */ MoonPayBalanceWithdrawWidget),\n/* harmony export */   MoonPayBuyWidget: () => (/* binding */ MoonPayBuyWidget),\n/* harmony export */   MoonPayConsumerKycWidget: () => (/* binding */ MoonPayConsumerKycWidget),\n/* harmony export */   MoonPayContext: () => (/* binding */ MoonPayContext),\n/* harmony export */   MoonPayNftCheckoutWidget: () => (/* binding */ MoonPayNftCheckoutWidget),\n/* harmony export */   MoonPayNftClaimWidget: () => (/* binding */ MoonPayNftClaimWidget),\n/* harmony export */   MoonPayProvider: () => (/* binding */ MoonPayProvider),\n/* harmony export */   MoonPaySellWidget: () => (/* binding */ MoonPaySellWidget),\n/* harmony export */   MoonPaySwapWidget: () => (/* binding */ MoonPaySwapWidget),\n/* harmony export */   MoonPaySwapsCustomerSetupWidget: () => (/* binding */ MoonPaySwapsCustomerSetupWidget),\n/* harmony export */   MoonPayTopUpLedgerWidget: () => (/* binding */ MoonPayTopUpLedgerWidget),\n/* harmony export */   MoonPayTransactionTrackerWidget: () => (/* binding */ MoonPayTransactionTrackerWidget),\n/* harmony export */   MoonPayWithdrawLedgerWidget: () => (/* binding */ MoonPayWithdrawLedgerWidget)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n// src/components/MoonPayBalanceDepositWidget.tsx\n\n\n// src/constants.ts\nvar MOONPAY_WIDGET_CONTAINER_ID = \"moonpay-react-sdk-embedded-frame\";\n\n// src/helpers.ts\nvar getBuyConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature\n}) => {\n  const {\n    // params\n    currencyCode,\n    defaultCurrencyCode,\n    walletAddress,\n    walletAddressTag,\n    walletAddresses,\n    walletAddressTags,\n    colorCode,\n    theme,\n    themeId,\n    language,\n    baseCurrencyCode,\n    baseCurrencyAmount,\n    quoteCurrencyAmount,\n    lockAmount,\n    email,\n    externalTransactionId,\n    externalCustomerId,\n    paymentMethod,\n    redirectURL,\n    showAllCurrencies,\n    showOnlyCurrencies,\n    showWalletAddressForm,\n    unsupportedRegionRedirectUrl,\n    skipUnsupportedRegionScreen,\n    baseOrigin,\n    // handlers\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh,\n    // other\n    overlayNode\n  } = props;\n  const params = {\n    apiKey,\n    signature,\n    currencyCode,\n    defaultCurrencyCode,\n    walletAddress,\n    walletAddressTag,\n    walletAddresses,\n    walletAddressTags,\n    colorCode,\n    theme,\n    themeId,\n    language,\n    baseCurrencyCode,\n    baseCurrencyAmount,\n    quoteCurrencyAmount,\n    lockAmount,\n    email,\n    externalTransactionId,\n    externalCustomerId,\n    paymentMethod,\n    redirectURL,\n    showAllCurrencies,\n    showOnlyCurrencies,\n    showWalletAddressForm,\n    unsupportedRegionRedirectUrl,\n    skipUnsupportedRegionScreen,\n    baseOrigin\n  };\n  const handlers = {\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated\n  };\n  return {\n    flow: \"buy\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`,\n    overlayNode\n  };\n};\nvar getSellConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature\n}) => {\n  const {\n    // params\n    quoteCurrencyCode,\n    defaultCurrencyCode,\n    defaultBaseCurrencyCode,\n    walletAddress,\n    walletAddressTag,\n    walletAddresses,\n    walletAddressTags,\n    colorCode,\n    theme,\n    themeId,\n    language,\n    baseCurrencyCode,\n    baseCurrencyAmount,\n    quoteCurrencyAmount,\n    lockAmount,\n    email,\n    externalTransactionId,\n    externalCustomerId,\n    paymentMethod,\n    redirectURL,\n    showAllCurrencies,\n    showOnlyCurrencies,\n    showWalletAddressForm,\n    unsupportedRegionRedirectUrl,\n    skipUnsupportedRegionScreen,\n    mpWalletId,\n    baseOrigin,\n    // handlers\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    apiKey,\n    signature,\n    quoteCurrencyCode,\n    defaultCurrencyCode,\n    defaultBaseCurrencyCode,\n    walletAddress,\n    walletAddressTag,\n    walletAddresses,\n    walletAddressTags,\n    colorCode,\n    theme,\n    themeId,\n    language,\n    baseCurrencyCode,\n    baseCurrencyAmount,\n    quoteCurrencyAmount,\n    lockAmount,\n    email,\n    externalTransactionId,\n    externalCustomerId,\n    paymentMethod,\n    redirectURL,\n    showAllCurrencies,\n    showOnlyCurrencies,\n    showWalletAddressForm,\n    unsupportedRegionRedirectUrl,\n    skipUnsupportedRegionScreen,\n    mpWalletId,\n    baseOrigin\n  };\n  const handlers = {\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated\n  };\n  return {\n    flow: \"sell\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`\n  };\n};\nvar getSwapsCustomerSetupConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment\n}) => {\n  const {\n    amount,\n    amountCurrencyCode,\n    theme,\n    themeId,\n    externalCustomerId,\n    baseOrigin,\n    // handlers\n    onAuthToken,\n    onLogin,\n    onInitiateDeposit,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    onKmsWalletsCreated,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    apiKey,\n    amount,\n    amountCurrencyCode,\n    theme,\n    themeId,\n    externalCustomerId,\n    baseOrigin\n  };\n  const handlers = {\n    onAuthToken,\n    onLogin,\n    onInitiateDeposit,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    onKmsWalletsCreated,\n    onTransactionCompleted,\n    onUnsupportedRegion\n  };\n  return {\n    flow: \"swapsCustomerSetup\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`\n  };\n};\nvar getConsumerKycConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment\n}) => {\n  const {\n    amount,\n    amountCurrencyCode,\n    theme,\n    themeId,\n    baseOrigin,\n    // handlers\n    onLogin,\n    onInitiateDeposit,\n    onConsumerKycComplete,\n    onKmsWalletsCreated,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onCloseOverlay,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    apiKey,\n    amount,\n    amountCurrencyCode,\n    theme,\n    themeId,\n    baseOrigin\n  };\n  const handlers = {\n    onLogin,\n    onInitiateDeposit,\n    onConsumerKycComplete,\n    onKmsWalletsCreated,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onCloseOverlay\n  };\n  return {\n    flow: \"consumerKyc\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`\n  };\n};\nvar getNftConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature\n}) => {\n  const {\n    // params\n    contractAddress,\n    tokenId,\n    listingId,\n    externalTransactionId,\n    baseCurrencyCode,\n    redirectURL,\n    walletAddress,\n    subPartnerName,\n    metadata,\n    dynamicAssetInfo,\n    sellType,\n    email,\n    quantity,\n    baseOrigin,\n    // handlers\n    onAuthToken,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    apiKey,\n    signature,\n    contractAddress,\n    tokenId,\n    listingId,\n    externalTransactionId,\n    baseCurrencyCode,\n    redirectURL,\n    walletAddress,\n    subPartnerName,\n    metadata,\n    dynamicAssetInfo,\n    sellType,\n    email,\n    quantity,\n    baseOrigin\n  };\n  const handlers = {\n    onAuthToken,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onCloseOverlay,\n    onTransactionCreated\n  };\n  return {\n    flow: \"nft\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`\n  };\n};\nvar getClaimConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature\n}) => {\n  const {\n    contractId,\n    tokenId,\n    initialScreen,\n    // handlers\n    onAuthToken,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onCloseOverlay,\n    onTransactionCreated,\n    baseOrigin,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    apiKey,\n    signature,\n    contractId,\n    tokenId,\n    initialScreen,\n    baseOrigin\n  };\n  const handlers = {\n    onAuthToken,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onCloseOverlay,\n    onTransactionCreated\n  };\n  return {\n    flow: \"claim\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`\n  };\n};\nvar getTopUpLedgerConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature\n}) => {\n  const {\n    // params\n    externalCustomerId,\n    theme,\n    themeId,\n    currencyCode,\n    baseOrigin,\n    // handlers\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    apiKey,\n    signature,\n    externalCustomerId,\n    theme,\n    themeId,\n    currencyCode,\n    baseOrigin\n  };\n  const handlers = {\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated\n  };\n  return {\n    flow: \"topup\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`\n  };\n};\nvar getMoonPayBalanceDepositConfigFromProps = ({\n  props,\n  debug,\n  environment\n}) => {\n  const {\n    theme,\n    themeId,\n    baseOrigin,\n    // handlers\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onCloseOverlay,\n    onTransactionCreated,\n    onBalanceDepositTransferConfirmed,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    theme,\n    themeId,\n    baseOrigin\n  };\n  const handlers = {\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onCloseOverlay,\n    onTransactionCreated,\n    onBalanceDepositTransferConfirmed\n  };\n  return {\n    flow: \"moonPayBalanceDeposit\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`\n  };\n};\nvar getMoonPayBalanceWithdrawConfigFromProps = ({\n  props,\n  debug,\n  environment\n}) => {\n  const {\n    theme,\n    themeId,\n    baseOrigin,\n    // handlers\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    theme,\n    themeId,\n    baseOrigin\n  };\n  const handlers = {\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onCloseOverlay,\n    onTransactionCreated\n  };\n  return {\n    flow: \"moonPayBalanceWithdraw\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`\n  };\n};\nvar getWithdrawLedgerConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature\n}) => {\n  const {\n    // params\n    externalCustomerId,\n    theme,\n    themeId,\n    baseCurrencyCode,\n    baseOrigin,\n    // handlers\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    apiKey,\n    signature,\n    externalCustomerId,\n    theme,\n    themeId,\n    baseCurrencyCode,\n    baseOrigin\n  };\n  const handlers = {\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated\n  };\n  return {\n    flow: \"withdraw\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`\n  };\n};\nvar getSwapConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature\n}) => {\n  const {\n    // params\n    walletAddress,\n    walletAddressTag,\n    refundWalletAddress,\n    baseCurrencyCode,\n    baseCurrencyAmount,\n    quoteCurrencyCode,\n    quoteCurrencyAmount,\n    colorCode,\n    theme,\n    themeId,\n    externalCustomerId,\n    baseOrigin,\n    // handlers\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    apiKey,\n    signature,\n    walletAddress,\n    walletAddressTag,\n    refundWalletAddress,\n    baseCurrencyCode,\n    baseCurrencyAmount,\n    quoteCurrencyCode,\n    quoteCurrencyAmount,\n    colorCode,\n    theme,\n    themeId,\n    externalCustomerId,\n    baseOrigin\n  };\n  const handlers = {\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated\n  };\n  return {\n    flow: \"swap\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`\n  };\n};\nvar getTransactionTrackerConfigFromProps = ({\n  props,\n  debug,\n  environment\n}) => {\n  const {\n    // params\n    transactionId,\n    colorCode,\n    theme,\n    themeId,\n    baseOrigin,\n    // handlers\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    transactionId,\n    colorCode,\n    theme,\n    themeId,\n    baseOrigin\n  };\n  const handlers = {\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated\n  };\n  return {\n    flow: \"transactionTracker\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`,\n    useWarnBeforeRefresh\n  };\n};\n\n// ../js-sdk/src/loader.ts\nvar scriptLoadingStatus = {\n  isLoading: false,\n  isLoaded: false\n};\nasync function loadMoonPay(version = \"v1\") {\n  return new Promise((resolve, reject) => {\n    const scriptSrc = `https://static.moonpay.com/web-sdk/${version}/moonpay-web-sdk.min.js`;\n    const existingScript = document.querySelector(`script[src=\"${scriptSrc}\"]`);\n    scriptLoadingStatus.isLoading = true;\n    const checkLoaded = (count = 0) => {\n      if (window.MoonPayWebSdk) {\n        scriptLoadingStatus.isLoading = false;\n        scriptLoadingStatus.isLoaded = true;\n        resolve(window.MoonPayWebSdk.init);\n        return;\n      }\n      if (count > 100) {\n        scriptLoadingStatus.isLoading = false;\n        reject(new Error(\"Loading MoonPayWebSdk script timed out.\"));\n        return;\n      }\n      setTimeout(() => checkLoaded(count + 1), 100);\n    };\n    if (existingScript) {\n      checkLoaded();\n    } else {\n      const script = document.createElement(\"script\");\n      script.async = true;\n      script.src = scriptSrc;\n      script.addEventListener(\"load\", () => {\n        scriptLoadingStatus.isLoading = false;\n        scriptLoadingStatus.isLoaded = true;\n        resolve(window.MoonPayWebSdk?.init);\n      });\n      script.addEventListener(\"error\", () => {\n        scriptLoadingStatus.isLoading = false;\n        scriptLoadingStatus.isLoaded = false;\n        reject(new Error(\"Failed to load MoonPayWebSdk script.\"));\n      });\n      document.body.appendChild(script);\n    }\n  });\n}\n\n// src/components/MoonPayProvider.tsx\n\n\n// ../common/src/environment.ts\nfunction getEnvironmentFromApiKey(apiKey) {\n  return apiKey.startsWith(\"pk_live\") || apiKey.startsWith(\"sk_live\") ? \"production\" : \"sandbox\";\n}\n\n// ../common/src/Logger.ts\nvar NOOP = () => void 0;\nvar noopLogger = {\n  info: NOOP,\n  warn: NOOP,\n  error: NOOP\n};\nvar Logger = class _Logger {\n  prefix;\n  logger;\n  constructor({\n    logger,\n    prefix\n  }) {\n    this.logger = logger;\n    this.prefix = prefix ?? [\"Logger\"];\n  }\n  if(condition) {\n    return condition ? this : new _Logger({ logger: noopLogger });\n  }\n  info(...data) {\n    this.logger.info(`[${this.prefix}]`, ...data);\n  }\n  warn(...data) {\n    this.logger.warn(`[${this.prefix}]`, ...data);\n  }\n  error(...data) {\n    this.logger.error(`[${this.prefix}]`, ...data);\n  }\n};\n\n// ../common/src/react/useHasOverflow.tsx\n\n\n// ../common/src/react/useIsMounted.tsx\n\n\n// ../common/src/react/useRenderCount.ts\n\n\n// ../common/src/react/useScript.ts\n\n\n// ../common/src/uuid.ts\nvar uuidV4 = typeof window.crypto !== \"undefined\" && typeof window.crypto.getRandomValues !== \"undefined\" ? () => {\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(\n    /[018]/g,\n    (c) => (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n  );\n} : () => {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n    const r = Math.random() * 16 | 0;\n    const v = c === \"x\" ? r : r & 3 | 8;\n    return v.toString(16);\n  });\n};\n\n// src/components/MoonPayProvider.tsx\n\nvar MoonPayContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n  apiKey: \"\",\n  environment: \"sandbox\",\n  debug: false\n});\nvar MoonPayProvider = ({\n  children,\n  apiKey,\n  debug = false\n}) => {\n  const environment = getEnvironmentFromApiKey(apiKey);\n  const [contextState, setContextState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n    apiKey,\n    environment,\n    debug\n  });\n  const load = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async () => {\n    const moonPay = await loadMoonPay();\n    setContextState((state) => ({ ...state, init: moonPay }));\n  }, []);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!contextState.init)\n      load();\n  }, [load, contextState.init]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MoonPayContext.Provider, { value: contextState, children });\n};\n\n// src/useSdk.tsx\n\n\n// src/logger.ts\nvar Logger2 = class extends Logger {\n  constructor() {\n    super({ logger: console, prefix: [\"MoonPay React SDK\"] });\n  }\n};\n\n// src/useSdk.tsx\nvar useSdk = (config, visible, onUrlSignatureRequested) => {\n  const sdk = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const { init, debug } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const logger = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Logger2().if(debug || false));\n  const handleUpdateSignatureAndShow = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async () => {\n    if (!sdk.current) {\n      return;\n    }\n    if (!onUrlSignatureRequested && (\"walletAddress\" in config || \"walletAddresses\" in config)) {\n      logger.current.warn(\n        \"You must provide an `onUrlSignatureRequested` function to sign the URL when using the `walletAddress` or `walletAddresses` prop\"\n      );\n    }\n    if (onUrlSignatureRequested) {\n      const url = sdk.current.generateUrlForSigning();\n      try {\n        const updatedSignature = await onUrlSignatureRequested?.(url);\n        if (!updatedSignature) {\n          return;\n        }\n        sdk.current?.updateSignature(updatedSignature);\n      } catch (e) {\n        logger.current.error(\n          \"Something went wrong calling the provided `onUrlSignatureRequested` function:\",\n          e\n        );\n      }\n    }\n    if (visible) {\n      sdk.current?.show();\n    }\n  }, [onUrlSignatureRequested, visible, config]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (sdk.current) {\n      sdk.current.close();\n    }\n    const newSdk = init?.(config) || null;\n    sdk.current = newSdk;\n    handleUpdateSignatureAndShow();\n  }, [init, config, handleUpdateSignatureAndShow]);\n};\n\n// src/components/MoonPayWidget.tsx\n\nvar defaultStyles = {\n  width: \"424px\",\n  height: \"656px\",\n  margin: \"32px 28px 32px 28px\",\n  border: \"1px solid #E5E7EB\",\n  borderRadius: \"16px\",\n  overflow: \"hidden\"\n};\nfunction MoonPayWidget({\n  config,\n  onUrlSignatureRequested,\n  visible = true,\n  className,\n  style\n}) {\n  useSdk(config, visible, onUrlSignatureRequested);\n  if (visible) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n      \"div\",\n      {\n        id: MOONPAY_WIDGET_CONTAINER_ID,\n        className,\n        style: config.variant === \"embedded\" ? {\n          ...defaultStyles,\n          ...style\n        } : void 0\n      }\n    );\n  }\n  return null;\n}\n\n// src/components/MoonPayBalanceDepositWidget.tsx\n\nfunction MoonPayBalanceDepositWidget(props) {\n  const { environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getMoonPayBalanceDepositConfigFromProps({\n      props,\n      environment,\n      debug: false\n    }),\n    [props, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPayBalanceWithdrawWidget.tsx\n\n\nfunction MoonPayBalanceWithdrawWidget(props) {\n  const { environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getMoonPayBalanceWithdrawConfigFromProps({\n      props,\n      environment,\n      debug: false\n    }),\n    [props, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPayBuyWidget.tsx\n\n\nfunction MoonPayBuyWidget(props) {\n  const { apiKey, environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getBuyConfigFromProps({\n      props,\n      apiKey,\n      environment,\n      debug: false,\n      signature: props.signature || \"\"\n    }),\n    [props, apiKey, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPayConsumerKycWidget.tsx\n\n\nfunction MoonPayConsumerKycWidget(props) {\n  const { apiKey, environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getConsumerKycConfigFromProps({\n      props,\n      apiKey,\n      environment,\n      debug: false,\n      signature: \"\"\n    }),\n    [props, apiKey, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPayNftCheckoutWidget.tsx\n\n\nfunction MoonPayNftCheckoutWidget(props) {\n  const { apiKey, environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getNftConfigFromProps({\n      props,\n      apiKey,\n      environment,\n      debug: false,\n      signature: props.signature || \"\"\n    }),\n    [props, apiKey, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPayNftClaimWidget.tsx\n\n\nfunction MoonPayNftClaimWidget(props) {\n  const { apiKey, environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getClaimConfigFromProps({\n      props,\n      apiKey,\n      environment,\n      debug: false,\n      signature: props.signature || \"\"\n    }),\n    [props, apiKey, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPaySellWidget.tsx\n\n\nfunction MoonPaySellWidget(props) {\n  const { apiKey, environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getSellConfigFromProps({\n      props,\n      apiKey,\n      environment,\n      debug: false,\n      signature: props.signature || \"\"\n    }),\n    [props, apiKey, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPaySwapsCustomerSetupWidget.tsx\n\n\nfunction MoonPaySwapsCustomerSetupWidget(props) {\n  const { apiKey, environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getSwapsCustomerSetupConfigFromProps({\n      props,\n      apiKey,\n      environment,\n      debug: false,\n      signature: \"\"\n    }),\n    [props, apiKey, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPaySwapWidget.tsx\n\n\nfunction MoonPaySwapWidget(props) {\n  const { apiKey, environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getSwapConfigFromProps({\n      props,\n      apiKey,\n      environment,\n      debug: false,\n      signature: props.signature || \"\"\n    }),\n    [props, apiKey, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPayTopUpLedgerWidget.tsx\n\n\nfunction MoonPayTopUpLedgerWidget(props) {\n  const { apiKey, environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getTopUpLedgerConfigFromProps({\n      props,\n      apiKey,\n      environment,\n      debug: false,\n      signature: props.signature || \"\"\n    }),\n    [props, apiKey, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPayTransactionTrackerWidget.tsx\n\n\nfunction MoonPayTransactionTrackerWidget(props) {\n  const { apiKey, environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getTransactionTrackerConfigFromProps({\n      props,\n      apiKey,\n      environment,\n      debug: false,\n      signature: \"\"\n    }),\n    [props, apiKey, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPayWithdrawLedgerWidget.tsx\n\n\nfunction MoonPayWithdrawLedgerWidget(props) {\n  const { apiKey, environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getWithdrawLedgerConfigFromProps({\n      props,\n      apiKey,\n      environment,\n      debug: false,\n      signature: props.signature || \"\"\n    }),\n    [props, apiKey, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@moonpay/moonpay-react/dist/index.js\n"));

/***/ })

}]);